name: Build multiarch image - tag

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+-[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+.[0-9]+-r[0-9]+'
    paths:
      - "Dockerfile*"
      - "!.github/**"

  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    permissions:
      contents: read
      packages: write
    steps:

      - name: Get latest tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/heads/}" >> ${GITHUB_OUTPUT}

      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ steps.vars.outputs.tag }}

      - name: Prepare
        id: prep
        run: |
          BUILD_DATE=$(date --rfc-3339=seconds --utc)
          echo "build_date=${BUILD_DATE}" >> ${GITHUB_OUTPUT}
          PLATFORMS=amd64,arm,arm64
          TAGS1="ghcr.io/${{ github.repository_owner }}/tor:${{ steps.vars.outputs.tag }}"
          if [ "${{github.event_name}}" == "pull_request" ]; then
                echo "push=false" >> ${GITHUB_OUTPUT}
              else
                echo "push=true" >> ${GITHUB_OUTPUT}
                echo "tags1=${TAGS1}" >> ${GITHUB_OUTPUT}
                echo "branch=${GIT_BRANCH}" >> ${GITHUB_OUTPUT}
          fi
          echo "platforms=${PLATFORMS}" >> ${GITHUB_OUTPUT}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ steps.prep.outputs.platforms }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:latest

      - name: Log into GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (tor)
        uses: docker/build-push-action@v6
        with:
          labels: |
            org.opencontainers.image.created=${{ steps.prep.outputs.build_date }}
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          platforms: ${{ steps.prep.outputs.platforms }}
          push: ${{ steps.prep.outputs.push }}
          tags: ${{ steps.prep.outputs.tags1 }}
