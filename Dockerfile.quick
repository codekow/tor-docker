ARG ALPINE_VERSION="3"

# Build the lyrebird4 binary (cross-compiling)
ARG GO_VERSION=1.22

FROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-alpine AS lyrebird-builder
ARG LYREBIRD_VERSION="0.6.2"

RUN apk add --update --no-cache git && \
      git clone https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird.git --depth 1 --branch "lyrebird-${LYREBIRD_VERSION}" /lyrebird

# Build lyrebird
WORKDIR /lyrebird
RUN mkdir /out

ARG TARGETOS TARGETARCH
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg \
    CGO_ENABLED=0 GOOS=$TARGETOS GOARCH=$TARGETARCH \
      go build -ldflags="-X main.lyrebirdVersion=${LYREBIRD_VERSION}" -o /out/lyrebird ./cmd/lyrebird

# Tor runner
FROM --platform=$TARGETPLATFORM docker.io/library/alpine:${ALPINE_VERSION} AS runner

WORKDIR /app
ENV HOME=/app

# Install tor
ARG TOR_VERSION="0.4.8.19"
RUN apk add --update --no-cache \
      tor=~"${TOR_VERSION}" && \
    sed -i '/tor/ s/100:101/1001:0/' /etc/passwd && \
    rmdir /var/lib/tor && \
    mkdir -p /run/tor/service && \
    chgrp -R 0 /app /run/tor /var/lib /var/log && \
    chmod -R g+w /app /run /var/lib /var/log

# fix hard coded path for controller
RUN ln -s /usr/bin/tor /usr/local/bin/tor

# install transports
COPY --from=lyrebird-builder /out/lyrebird /usr/local/bin/.

# change to non root
USER 1001

LABEL org.opencontainers.image.source="https://github.com/codekow/tor-docker"

ENTRYPOINT ["/usr/local/bin/tor"]
